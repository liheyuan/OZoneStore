/**
 * Autogenerated by Thrift Compiler (0.7.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 */
#ifndef ozstore_TYPES_H
#define ozstore_TYPES_H

#include <Thrift.h>
#include <TApplicationException.h>
#include <protocol/TProtocol.h>
#include <transport/TTransport.h>



namespace ozstore {

typedef struct _OZException__isset {
  _OZException__isset() : why(false) {}
  bool why;
} _OZException__isset;

class OZException : public ::apache::thrift::TException {
 public:

  static const char* ascii_fingerprint; // = "EFB929595D312AC8F305D5A794CFEDA1";
  static const uint8_t binary_fingerprint[16]; // = {0xEF,0xB9,0x29,0x59,0x5D,0x31,0x2A,0xC8,0xF3,0x05,0xD5,0xA7,0x94,0xCF,0xED,0xA1};

  OZException() : why("") {
  }

  virtual ~OZException() throw() {}

  std::string why;

  _OZException__isset __isset;

  void __set_why(const std::string& val) {
    why = val;
  }

  bool operator == (const OZException & rhs) const
  {
    if (!(why == rhs.why))
      return false;
    return true;
  }
  bool operator != (const OZException &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const OZException & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

} // namespace

#endif
